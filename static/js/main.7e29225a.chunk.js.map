{"version":3,"sources":["Oscilloscope.js","Spectrogram.js","Bars.js","ControlBar.js","AudioVisualiser.js","AudioAnalyser.js","Header.js","spotify.js","App.js","registerServiceWorker.js","index.js"],"names":["thickness","Oscilloscope","Fragment","Typography","className","gutterBottom","Slider","id","min","max","step","defaultValue","valueLabelDisplay","color","onChange","event","value","gamma","Spectrogram","barWidth","gap","log","caps","opacity","lineFill","capColor","capSpeed","type","Bars","React","useState","capDisable","setCapDisable","opacityDisable","setOpacityDisable","lineFillDisable","setLineFillDisable","RadioGroup","row","Grid","container","spacing","item","xs","FormControlLabel","control","Radio","labelPlacement","Switch","defaultChecked","inputProps","disabled","fade","width","height","smoothing","fft","tab","fftSizes","ControlBar","controlAudio","currentTab","setCurrentTab","fadeDisable","setFadeDisable","smoothingDisable","setSmoothingDisable","Tabs","variant","textColor","indicatorColor","audio","toggleAudio","Tab","label","currentControls","onChangeCommitted","aria-labelledby","marks","AudioVisualiser","audioData","createCanvas","createRef","capYPositionArray","useRef","spectroScale","useLayoutEffect","length","draw","caprgb","canvas","current","context","getContext","concat","i","rgb","j","fillStyle","fillRect","oscilloscope","bars","spectro","x","sliceWidth","lineWidth","strokeStyle","beginPath","y","lineTo","stroke","capArray","xx","barNum","Math","pow","round","push","substring","hot","chroma","scale","drawImage","hex","translate","setTransform","window","innerWidth","innerHeight","ref","AudioAnalyser","stream","Uint8Array","setAudioData","audioContext","AudioContext","analyser","source","rafId","console","resume","createAnalyser","fftSize","smoothingTimeConstant","createMediaStreamSource","connect","cancelAnimationFrame","suspend","requestAnimationFrame","tick","getByteTimeDomainData","getByteFrequencyData","Header","Button","onClick","join","theme","createMuiTheme","palette","primary","main","contrastText","secondary","typography","fontFamily","body1","h3","padding","overrides","MuiTab","textColorPrimary","root","fontSize","MuiSwitch","switchBase","MuiRadio","MuiSlider","mark","App","props","setAudio","getAudio","a","navigator","mediaDevices","getUserMedia","video","getTracks","forEach","track","stop","ThemeProvider","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7e29225a.chunk.js","sourcesContent":["import React from 'react'\nimport { Slider, Typography } from '@material-ui/core'\n\nvar thickness = 1;\n\nconst Oscilloscope = () => {\n    return (\n        <React.Fragment>\n            <Typography className=\"controlTitle\" gutterBottom>thickness</Typography>\n            <Slider id='thickness'\n                min={0}\n                max={10}\n                step={0.1}\n                defaultValue={1}\n                valueLabelDisplay='auto'\n                color='secondary'\n                onChange={(event, value) => {\n                    thickness = value;\n                }}\n            />\n        </React.Fragment>\n    )\n}\n\nexport { thickness }\n\nexport default Oscilloscope;","import React from 'react'\nimport { Slider, Typography } from '@material-ui/core'\n\nvar gamma = 1;\n\nconst Spectrogram = () => {\n    return (\n        <React.Fragment>\n            <Typography className=\"controlTitle\" gutterBottom>gamma</Typography>\n            <Slider id='thickness'\n                min={0}\n                max={5}\n                step={0.01}\n                defaultValue={1}\n                valueLabelDisplay='auto'\n                color='secondary'\n                onChange={(event, value) => {\n                    gamma = value;\n                }}\n            />\n        </React.Fragment>\n    )\n}\n\nexport { gamma }\n\nexport default Spectrogram;","import React from 'react'\nimport {\n    Slider, Typography, Switch, Grid, Radio, RadioGroup,\n    FormControlLabel\n} from '@material-ui/core'\n\nvar barWidth = 1;\nvar gap = 10;\nvar log = true;\nvar caps = true;\nvar opacity = false;\nvar lineFill = false;\nvar capColor = [252, 0, 25];\nvar capSpeed = 1;\nvar type = 'bars'\n\nconst Bars = () => {\n    const [capDisable, setCapDisable] = React.useState(false)\n    const [opacityDisable, setOpacityDisable] = React.useState(false)\n    const [lineFillDisable, setLineFillDisable] = React.useState(true)\n\n    return (\n        // <div className='bars'>\n        <React.Fragment>\n            <RadioGroup row defaultValue='bars' onChange={(event, value) => {\n                type = value;\n                if (value === 'doublebars') {\n                    setCapDisable(true)\n                    setOpacityDisable(false)\n                    setLineFillDisable(true)\n                    caps = false;\n                    lineFill = false;\n                } else if (value === 'line') {\n                    setCapDisable(true)\n                    caps = false;\n                    setOpacityDisable(true)\n                    setLineFillDisable(false)\n                    opacity = false\n                } else {\n                    setCapDisable(false)\n                    setOpacityDisable(false)\n                    setLineFillDisable(true)\n                    lineFill = false\n                }\n            }}>\n                <Grid container spacing={3}>\n                    <Grid item xs>\n                        <Typography className=\"controlTitle\" id='barRadio'>bars</Typography>\n                        <FormControlLabel value=\"bars\" control={<Radio />} labelPlacement='top' />\n                    </Grid>\n                    <Grid item xs>\n                        <Typography className=\"controlTitle\" id='doubleBarRadio'>double bars</Typography>\n                        <FormControlLabel value=\"doublebars\" control={<Radio />} labelPlacement='top' />\n                    </Grid>\n                    <Grid item xs>\n                        <Typography className=\"controlTitle\" id='lineRadio'>line</Typography>\n                        <FormControlLabel value=\"line\" control={<Radio />} labelPlacement='top' />\n                    </Grid>\n                </Grid>\n            </RadioGroup>\n            <Grid container spacing={4}>\n                <Grid item xs>\n                    <Typography className=\"controlTitle\" id='barWidth' gutterBottom>bar width</Typography>\n                    <Slider id='barWidth'\n                        min={1}\n                        max={50}\n                        step={1}\n                        defaultValue={1}\n                        valueLabelDisplay='auto'\n                        color='secondary'\n                        onChange={(event, value) => {\n                            barWidth = value;\n                        }}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <Typography className=\"controlTitle\" id='gap' gutterBottom>gap</Typography>\n                    <Slider id='gap'\n                        min={0}\n                        max={25}\n                        step={1}\n                        defaultValue={10}\n                        valueLabelDisplay='auto'\n                        color='secondary'\n                        onChange={(event, value) => {\n                            gap = value;\n                        }}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <Typography className=\"controlTitle\" id='capSpeed' gutterBottom>cap speed</Typography>\n                    <Slider id='capSpeed'\n                        min={0.25}\n                        max={1.25}\n                        step={0.01}\n                        defaultValue={1}\n                        valueLabelDisplay='auto'\n                        color='secondary'\n                        onChange={(event, value) => {\n                            capSpeed = value;\n                        }}\n                    />\n                </Grid>\n            </Grid>\n            <Grid container spacing={4}>\n                <Grid item xs>\n                    <Typography className=\"controlTitle\" id='log' gutterBottom>log</Typography>\n                    <Switch id='log'\n                        defaultChecked={true}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                        onChange={(event, value) => {\n                            log = value\n                        }}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <Typography className=\"controlTitle\" id='caps' gutterBottom>caps</Typography>\n                    <Switch id='caps'\n                        defaultChecked={true}\n                        disabled={capDisable}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                        onChange={(event, value) => {\n                            caps = value\n                        }}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <Typography className=\"controlTitle\" id='opacity' gutterBottom>opacity</Typography>\n                    <Switch id='opacity'\n                        defaultChecked={false}\n                        disabled={opacityDisable}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                        onChange={(event, value) => {\n                            opacity = value\n                        }}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <Typography className=\"controlTitle\" id='lineFill' gutterBottom>line fill</Typography>\n                    <Switch id='lineFill'\n                        defaultChecked={false}\n                        disabled={lineFillDisable}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                        onChange={(event, value) => {\n                            lineFill = value;\n                        }}\n                    />\n                </Grid>\n            </Grid>\n            <Typography className=\"controlTitle\" gutterBottom>cap color</Typography>\n            <div className='capColor'>\n                <Grid container spacing={3}>\n                    <Grid item xs>\n                        <Slider id='red'\n                            min={0}\n                            max={255}\n                            step={1}\n                            defaultValue={252}\n                            valueLabelDisplay='auto'\n                            color='secondary'\n                            onChange={(event, value) => {\n                                capColor[0] = value;\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs>\n                        <Slider id='green'\n                            min={0}\n                            max={255}\n                            step={1}\n                            defaultValue={0}\n                            valueLabelDisplay='auto'\n                            color='secondary'\n                            onChange={(event, value) => {\n                                capColor[1] = value;\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs>\n                        <Slider id='blue'\n                            min={0}\n                            max={255}\n                            step={1}\n                            defaultValue={25}\n                            valueLabelDisplay='auto'\n                            color='secondary'\n                            onChange={(event, value) => {\n                                capColor[2] = value;\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            </div>\n           </React.Fragment>\n        // </div>\n    )\n}\n\nexport { barWidth, gap, log, caps, opacity, lineFill, capColor, capSpeed, type }\n\nexport default Bars;","import React from 'react';\nimport { Slider, Typography, Grid, AppBar, Tabs, Tab } from '@material-ui/core'\nimport Oscilloscope from './Oscilloscope'\nimport { thickness } from './Oscilloscope'\nimport Spectrogram from './Spectrogram'\nimport { gamma } from './Spectrogram'\nimport Bars from './Bars'\nimport { barWidth, gap, log, caps, opacity, lineFill, capColor, capSpeed, type } from './Bars'\n\nvar fade = 0.8;\nvar color = [1, 255, 79];\nvar width = 50;\nvar height = 30;\nvar smoothing = 0.85;\nvar fft = 4096;\nvar tab = 'bars'\n\nconst fftSizes = [\n  { value: 64 },\n  { value: 128 },\n  { value: 256 },\n  { value: 512 },\n  { value: 1024 },\n  { value: 2048 },\n  { value: 4096 }\n];\n\nconst ControlBar = ({ controlAudio }) => {\n  const [currentTab, setCurrentTab] = React.useState('bars');\n  const [fadeDisable, setFadeDisable] = React.useState(false);\n  const [smoothingDisable, setSmoothingDisable] = React.useState(false);\n  // const reset = () => {\n  //   controlAudio.toggleAudio();\n  //   controlAudio.toggleAudio();\n  // }\n\n  const currentControls = () => {\n    switch (currentTab) {\n      case 'oscilloscope':\n        return <Oscilloscope />;\n      case 'bars':\n        return <Bars />;\n      case 'spectrogram':\n        return <Spectrogram />;\n    }\n  }\n\n  return (\n    <div className='ControlBar'>\n      <Tabs\n        variant='fullWidth'\n        textColor='primary'\n        indicatorColor='primary'\n        value={currentTab}\n        onChange={(event, value) => {\n          setCurrentTab(value);\n          tab = value;\n          if (value === 'spectrogram') {\n            setFadeDisable(true)\n            setSmoothingDisable(false)\n          } else if (value === 'oscilloscope') {\n            setFadeDisable(false)\n            setSmoothingDisable(true)\n          } else {\n            setFadeDisable(false)\n            setSmoothingDisable(false)\n          }\n          if (controlAudio.audio) {\n                    controlAudio.toggleAudio();\n                  }\n        }}>\n        <Tab value=\"oscilloscope\" label=\"oscilloscope\" />\n        <Tab value=\"bars\" label=\"bars\" />\n        <Tab value=\"spectrogram\" label=\"spectrogram\" />\n      </Tabs>\n      <div className='controlCard'>\n        {currentControls()}\n      </div>\n      <div className='controlCard'>\n        <Typography className=\"controlTitle\" gutterBottom>fade</Typography>\n        <Slider id='fade'\n          min={0}\n          max={1}\n          step={0.01}\n          disabled={fadeDisable}\n          defaultValue={0.8}\n          valueLabelDisplay='auto'\n          color='secondary'\n          onChange={(event, value) => {\n            fade = value;\n          }}\n        />\n        <Typography className=\"controlTitle\" gutterBottom>color</Typography>\n        <div className='color'>\n          <Grid container spacing={3}>\n            <Grid item xs>\n              <Slider id='red'\n                min={0}\n                max={255}\n                step={1}\n                defaultValue={1}\n                valueLabelDisplay='auto'\n                color='secondary'\n                onChange={(event, value) => {\n                  color[0] = value;\n                }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Slider id='green'\n                min={0}\n                max={255}\n                step={1}\n                defaultValue={255}\n                valueLabelDisplay='auto'\n                color='secondary'\n                onChange={(event, value) => {\n                  color[1] = value;\n                }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Slider id='blue'\n                min={0}\n                max={255}\n                step={1}\n                defaultValue={79}\n                valueLabelDisplay='auto'\n                color='secondary'\n                onChange={(event, value) => {\n                  color[2] = value;\n                }}\n              />\n            </Grid>\n          </Grid>\n        </div>\n        <div className='dimensions'>\n          <Grid container spacing={2}>\n            <Grid item xs>\n              <Typography className=\"controlTitle\" id='width' gutterBottom>width</Typography>\n              <Slider id='width'\n                min={1}\n                max={100}\n                step={0.1}\n                defaultValue={50}\n                valueLabelDisplay='auto'\n                color='secondary'\n                onChange={(event, value) => {\n                  width = value;\n                }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Typography className=\"controlTitle\" id='height' gutterBottom>height</Typography>\n              <Slider id='height'\n                min={1}\n                max={100}\n                step={0.1}\n                defaultValue={30}\n                valueLabelDisplay='auto'\n                color='secondary'\n                onChange={(event, value) => {\n                  height = value;\n                }}\n              />\n            </Grid>\n          </Grid>\n        </div>\n        <Typography className=\"controlTitle\" gutterBottom>(will reset)</Typography>\n        <div className='analyser'>\n          <Grid container spacing={2}>\n            <Grid item xs>\n              <Typography className=\"controlTitle\" id='smoothing' gutterBottom>smoothing</Typography>\n              <Slider id='smoothing'\n                min={0}\n                max={1}\n                step={0.01}\n                disabled={smoothingDisable}\n                defaultValue={0.85}\n                valueLabelDisplay='auto'\n                color='secondary'\n                onChangeCommitted={(event, value) => {\n                  smoothing = value;\n                  if (controlAudio.audio) {\n                    controlAudio.toggleAudio();\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Typography className=\"controlTitle\" id='fft' gutterBottom>fft</Typography>\n              <Slider id='fft'\n                min={0}\n                max={4096}\n                step={null}\n                defaultValue={4096}\n                aria-labelledby='discrete-slider-restrict'\n                marks={fftSizes}\n                valueLabelDisplay='auto'\n                color='secondary'\n                onChangeCommitted={(event, value) => {\n                  fft = value;\n                  if (controlAudio.audio) {\n                    controlAudio.toggleAudio();\n                  }\n                }}\n              />\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport {\n  color, width, height, thickness, fade, gamma,\n  barWidth, gap, log, caps, opacity, lineFill, capColor, capSpeed, type, smoothing, fft, tab\n};\n\nexport default ControlBar","import React, { useLayoutEffect, useRef } from 'react';\n// import { color } from './Info';\nimport chroma from 'chroma-js'\nimport {\n  fade, color, width, height, thickness, gamma,\n  barWidth, gap, log, caps, opacity, capColor, capSpeed, type, lineFill, fft, tab\n} from './ControlBar'\n\nconst AudioVisualiser = ({ audioData }) => {\n  var createCanvas = React.createRef();\n  var capYPositionArray = useRef([]);\n\n  var spectroScale = 1;\n  if (fft < 2048 && tab === 'spectrogram') {\n    spectroScale = 2048 / fft;\n  }\n\n  useLayoutEffect(() => {\n    if (audioData.length > 0) {\n      draw();\n    }\n  }, [audioData])\n\n  const draw = () => {\n    const canvas = createCanvas.current;\n    const height = canvas.height;\n    const width = canvas.width;\n    const context = canvas.getContext('2d');\n\n    var caprgb;\n    if (caps) {\n      caprgb = 'rgb('\n      caprgb = caprgb.concat(capColor[0])\n      for (var i = 1; i < 3; i++) {\n        caprgb = caprgb.concat(\", \")\n        caprgb = caprgb.concat(capColor[i])\n      }\n      caprgb = caprgb.concat(\")\")\n    }\n\n    var rgb = 'rgb('\n    rgb = rgb.concat(color[0])\n    for (var j = 1; j < 3; j++) {\n      rgb = rgb.concat(\", \")\n      rgb = rgb.concat(color[j])\n    }\n    rgb = rgb.concat(\")\")\n    if (tab !== 'spectrogram') {\n      context.fillStyle = 'rgba(34, 34, 34, ' + (1 - fade) + ')'\n      context.fillRect(0, 0, width, height)\n    }\n    switch (tab) {\n      case 'oscilloscope':\n        oscilloscope(height, width, context, rgb, thickness);\n        break;\n      case 'bars':\n        bars(height, width, context, rgb, barWidth, gap, log, caps, opacity, caprgb, capSpeed, type);\n        break;\n      case 'spectrogram':\n        spectro(canvas, height, width, context, rgb, gamma);\n        break;\n    }\n  }\n\n  const oscilloscope = (height, width, context, rgb, thickness) => {\n    let x = 0;\n    const sliceWidth = (width * 1.0) / audioData.length;\n\n    context.lineWidth = thickness;\n    context.strokeStyle = rgb;\n    // var hot = chroma.scale(['#000000', 'red', '#ffffff']).gamma(1);\n    context.beginPath();\n    for (const item of audioData) {\n      // context.strokeStyle = hot(item).hex();\n      const y = (item / 255.0) * height;\n      context.lineTo(x, y);\n      x += sliceWidth;\n    }\n    context.stroke();\n  }\n\n  const bars = (height, width, context, rgb, barWidth, gap, log, caps, opacity, caprgb, capSpeed, type) => {\n    const capArray = capYPositionArray.current;\n    // var barWidth = barWidth;\n    var xx = 0;\n    var capHeight = 1;\n    // var gap = gap;\n    var barNum = width / (barWidth + gap)\n    var step = Math.pow(audioData.length, 1 / (barNum));\n\n    context.beginPath();\n    for (var i = 0; i < barNum; i++) {\n      context.strokeStyle = rgb;\n      context.lineWidth = 1;\n      var value;\n      if (log) {\n        value = audioData[Math.round(Math.pow(step, i))] * height / 255;\n      } else {\n        value = audioData[i] * height / 255.0\n      }\n\n      // caps\n      if (caps || lineFill) {\n        context.fillStyle = caprgb;\n        if (capArray.length < barNum) {\n          capArray.push(value);\n        };\n        if (value < capArray[i]) {\n          capArray[i] = capArray[i] - capSpeed\n          if (caps) {\n            context.fillRect(i * (barWidth + gap) + gap, height - (capArray[i]), barWidth, capHeight);\n          } else {\n            context.lineTo(xx, height - (capArray[i]));\n          }\n        } else {\n          if (caps) {\n            context.fillRect(i * (barWidth + gap) + gap, height - (value) - 1, barWidth, capHeight);\n          } else {\n            context.lineTo(xx, height - value);\n          }\n          capArray[i] = value;\n        };\n      }\n\n      //effect\n      if (opacity) {\n        context.fillStyle = 'rgba' + rgb.substring(3, rgb.length - 1) + ',' + (value / 255.0 - fade / 10) + ')';\n      } else {\n        context.fillStyle = rgb\n      }\n\n      //bars\n      if (type === 'doublebars') {\n        context.fillRect(i * (barWidth + gap) + gap, height / 2 - value / 2, barWidth, value / 2);\n        context.fillRect(i * (barWidth + gap) + gap, height / 2, barWidth, value / 2);\n      } else if (type === 'bars') {\n        context.fillRect(i * (barWidth + gap) + gap, height - value, barWidth, value);\n      } else if (type === 'line') {\n        context.lineTo(xx, height - value);\n        xx += barWidth + gap\n      }\n    }\n    context.stroke()\n  }\n\n  const spectro = (canvas, height, width, context, rgb, gamma) => {\n    var hot = chroma.scale(['#000000', rgb, '#ffffff']).gamma(gamma);\n    var barWidth = 1\n    var gap = 0\n    var barNum = width / (barWidth + gap)\n\n    context.drawImage(canvas, 0, 0, width, height);\n\n    for (var i = 0; i < barNum / 1; i += 1) {\n      var value = audioData[i];\n      // var value = baudioData[Math.round(Math.pow(step, i))] * height / 255 / 3;\n      context.fillStyle = hot(value / 255.0).hex();\n\n      context.fillRect(width - 1, height - i, 1, 1);\n    }\n\n    context.translate(-1, 0);\n    context.drawImage(canvas, 0, 0, width, height, 0, 0, width, height);\n\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n\n  return (\n    <canvas width={window.innerWidth * width / 100.0} height={window.innerHeight * (height / 100.0) / spectroScale} ref={createCanvas} />\n  )\n}\n\nexport default AudioVisualiser;\n","import React, { useRef, useLayoutEffect } from \"react\";\nimport AudioVisualiser from \"./AudioVisualiser\";\nimport { smoothing, fft, tab } from './ControlBar';\n\nconst AudioAnalyser = ({ stream }) => {\n  const [audioData, setAudioData] = React.useState(new Uint8Array(0));\n\n  var audioContext = useRef(new AudioContext());\n  var analyser = useRef();\n  var source = useRef();\n  var rafId = useRef();\n\n  useLayoutEffect(() => {\n    if (stream) {\n      console.log(\"init stream\");\n      audioContext.current.resume();\n      analyser.current = audioContext.current.createAnalyser();\n      analyser.current.fftSize = fft;\n      analyser.current.smoothingTimeConstant = smoothing;\n      setAudioData(new Uint8Array(analyser.current.fftSize));\n      source.current = audioContext.current.createMediaStreamSource(stream);\n      source.current.connect(analyser.current);\n    } else {\n      console.log(\"no stream\");\n    }\n    return () => {\n      console.log(\"cancel animation\");\n      cancelAnimationFrame(rafId.current);\n      audioContext.current.suspend();\n      // analyser.current.disconnect();\n      // source.current.disconnect();\n    };\n  }, [stream]);\n\n  useLayoutEffect(() => {\n    const tick = () => {\n      var audioData = new Uint8Array(analyser.current.fftSize);\n      if (tab === 'oscilloscope') {\n        analyser.current.getByteTimeDomainData(audioData);\n      } else {\n        analyser.current.getByteFrequencyData(audioData);\n      }\n      setAudioData(audioData)\n      rafId.current = requestAnimationFrame(tick);\n    };\n    rafId.current = requestAnimationFrame(tick);\n  }, [])\n  return (\n    <React.Fragment>\n      <AudioVisualiser audioData={audioData} />\n    </React.Fragment>\n  );\n};\n\nexport default AudioAnalyser;\n","import React from 'react';\nimport { Button } from '@material-ui/core'\n\nconst Header = ({ controlAudio }) => {\n    return (\n        <div className=\"Header\">\n            <Button\n                id='butt'\n                variant='outlined'\n                color='primary'\n                onClick={controlAudio.toggleAudio}>\n                {controlAudio.audio ? 'stop' : 'begin'}\n            </Button>\n        </div>\n    );\n}\n\nexport default Header","\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri = \"http://localhost:3000/callback/\";\nconst clientId = \"6d21bc23eaeb4573a2b668d8239e57ea\";\n\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const getTokenFromUrl = () => {\n  return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      let parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n      return initial;\n    }, {});\n};\n\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\")}&response_type=token&show_dialog=true`;","import React, { useEffect } from 'react';\nimport AudioAnalyser from './AudioAnalyser';\nimport Header from './Header';\nimport ControlBar from './ControlBar'\nimport { getTokenFromUrl } from './spotify';\nimport { Typography } from '@material-ui/core'\nimport Login from './Login';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Info from './Info';\nimport './App.css';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FF01D7',\n      contrastText: '#FFEB00'\n    },\n    secondary: {\n      main: '#00EDF5',\n    }\n  },\n  typography: {\n    fontFamily: 'Trip',\n    body1: {\n      color: \"#FFEB00\"\n    },\n    h3: {\n      padding: 10\n    }\n  },\n  overrides: {\n    MuiTab: {\n      textColorPrimary: {\n        color: '#FFEB00'\n      },\n      root: {\n        fontSize: 18\n      }\n    },\n    MuiSwitch: {\n      switchBase: {\n        color: '#5600CC'\n      }\n    },\n    MuiRadio: {\n      root: {\n        color: '#5600CC'\n      }\n    },\n    MuiSlider: {\n      mark: {\n        color: '#FFEB00'\n      }\n    }\n  }\n});\n\n// const spotify = new SpotifyWebApi({\n//   clientId: '6d21bc23eaeb4573a2b668d8239e57ea',\n//   redirectUri: 'http://localhost:3000/callback/'\n// });\n\nconst App = (props) => {\n  const [audio, setAudio] = React.useState(null);\n  // const [token, setToken] = React.useState();\n\n  const getAudio = async () => {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    setAudio(audio);\n  }\n\n  const stopAudio = () => {\n    audio.getTracks().forEach(track => track.stop());\n    setAudio(null);\n  }\n\n  const toggleAudio = () => {\n    if (audio) {\n      stopAudio();\n    } else {\n      getAudio();\n    }\n  }\n\n  // useEffect(() => {\n  //   const hash = getTokenFromUrl();\n  //   window.location.hash = \"\";\n  //   const _token = hash.access_token;\n  //   if (_token) {\n  //     setToken(_token);\n  //     spotify.setAccessToken(_token);\n  //   }\n  // }, [])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Typography className='title' variant='h3'>sandwich time</Typography>\n        {/* {token ? <a>LOGGED IN</a> : <Login />}\n      <Info spotify={spotify} /> */}\n        <Header controlAudio={{ audio, toggleAudio }} />\n        {audio ? <AudioAnalyser stream={audio} /> : ''}\n        <ControlBar controlAudio={{ audio, toggleAudio }} />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}