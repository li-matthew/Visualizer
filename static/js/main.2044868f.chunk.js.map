{"version":3,"sources":["Bars.js","ControlBar.js","AudioVisualiser.js","AudioAnalyser.js","Header.js","spotify.js","App.js","registerServiceWorker.js","index.js"],"names":["barWidth","gap","log","caps","opacity","lineFill","capColor","capSpeed","type","Bars","React","useState","capDisable","setCapDisable","opacityDisable","setOpacityDisable","lineFillDisable","setLineFillDisable","class","RadioGroup","row","defaultValue","onChange","event","value","Grid","container","spacing","item","xs","Typography","id","gutterBottom","color","FormControlLabel","control","Radio","labelPlacement","Slider","min","max","step","valueLabelDisplay","Switch","defaultChecked","inputProps","disabled","fade","width","height","ControlBar","AudioVisualiser","audioData","createCanvas","createRef","capYPositionArray","useRef","useLayoutEffect","length","draw","caprgb","canvas","current","context","getContext","console","concat","i","rgb","fillStyle","fillRect","bars","capArray","xx","barNum","Math","pow","beginPath","strokeStyle","lineWidth","round","push","lineTo","substring","stroke","window","innerWidth","innerHeight","ref","AudioAnalyser","stream","Uint8Array","setAudioData","audioContext","AudioContext","analyser","source","rafId","createAnalyser","fftSize","smoothingTimeConstant","createMediaStreamSource","connect","cancelAnimationFrame","disconnect","requestAnimationFrame","tick","getByteFrequencyData","Header","controlAudio","Button","variant","onClick","toggleAudio","audio","join","theme","createMuiTheme","palette","primary","main","secondary","App","props","setAudio","getAudio","a","navigator","mediaDevices","getUserMedia","video","ThemeProvider","className","getTracks","forEach","track","stop","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2044868f.chunk.js","sourcesContent":["import React from 'react'\nimport {\n    Slider, Typography, Switch, Grid, Radio, RadioGroup,\n    FormControlLabel\n} from '@material-ui/core'\n\nvar barWidth = 1;\nvar gap = 10;\nvar log = true;\nvar caps = true;\nvar opacity = false;\nvar lineFill = false;\nvar capColor = [252, 0, 25];\nvar capSpeed = 1;\nvar type = 'bars'\n// var lineThickness = 1;\n\nconst Bars = () => {\n    const [capDisable, setCapDisable] = React.useState(false)\n    const [opacityDisable, setOpacityDisable] = React.useState(false)\n    const [lineFillDisable, setLineFillDisable] = React.useState(true)\n\n    return (\n        <div class='bars'>\n            <RadioGroup row defaultValue='bars' onChange={(event, value) => {\n                type = value;\n                if (value == 'doublebars') {\n                    setCapDisable(true)\n                    setOpacityDisable(false)\n                    setLineFillDisable(true)\n                    caps = false;\n                    lineFill = false;\n                } else if (value == 'line') {\n                    setCapDisable(true)\n                    caps = false;\n                    setOpacityDisable(true)\n                    setLineFillDisable(false)\n                    opacity = false\n                } else {\n                    setCapDisable(false)\n                    setOpacityDisable(false)\n                    setLineFillDisable(true)\n                    lineFill = false\n                }\n            }}>\n                <Grid container spacing={3}>\n                    <Grid item xs>\n                        <Typography class=\"controlTitle\" id='barRadio' gutterBottom color='inherit'>bars</Typography>\n                        <FormControlLabel value=\"bars\" control={<Radio />} labelPlacement='top' />\n                    </Grid>\n                    <Grid item xs>\n                        <Typography class=\"controlTitle\" id='doubleBarRadio' gutterBottom color='inherit'>double bars</Typography>\n                        <FormControlLabel value=\"doublebars\" control={<Radio />} labelPlacement='top' />\n                    </Grid>\n                    <Grid item xs>\n                        <Typography class=\"controlTitle\" id='lineRadio' gutterBottom color='inherit'>line</Typography>\n                        <FormControlLabel value=\"line\" control={<Radio />} labelPlacement='top' />\n                    </Grid>\n                </Grid>\n            </RadioGroup>\n            <Grid container spacing={4}>\n                <Grid item xs>\n                    <Typography class=\"controlTitle\" id='barWidth' gutterBottom color='inherit'>bar width</Typography>\n                    <Slider id='barWidth'\n                        min={1}\n                        max={50}\n                        step={1}\n                        defaultValue={1}\n                        valueLabelDisplay='auto'\n                        color='secondary'\n                        onChange={(event, value) => {\n                            barWidth = value;\n                        }}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <Typography class=\"controlTitle\" id='gap' gutterBottom color='inherit'>gap</Typography>\n                    <Slider id='gap'\n                        min={0}\n                        max={25}\n                        step={1}\n                        defaultValue={10}\n                        valueLabelDisplay='auto'\n                        color='secondary'\n                        onChange={(event, value) => {\n                            gap = value;\n                        }}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <Typography class=\"controlTitle\" id='capSpeed' gutterBottom color='inherit'>cap speed</Typography>\n                    <Slider id='capSpeed'\n                        min={0.25}\n                        max={1.25}\n                        step={0.01}\n                        defaultValue={1}\n                        valueLabelDisplay='auto'\n                        color='secondary'\n                        onChange={(event, value) => {\n                            capSpeed = value;\n                        }}\n                    />\n                </Grid>\n                {/* <Grid item xs>\n                    <Typography class=\"controlTitle\" id='lineThickness' gutterBottom color='inherit'>line thickness</Typography>\n                    <Slider id='lineThickness'\n                        min={0}\n                        max={10}\n                        step={0.1}\n                        defaultValue={1}\n                        valueLabelDisplay='auto'\n                        color='secondary'\n                        onChange={(event, value) => {\n                            lineThickness = value;\n                        }}\n                    />\n                </Grid> */}\n            </Grid>\n            <Grid container spacing={4}>\n                <Grid item xs>\n                    <Typography class=\"controlTitle\" id='log' gutterBottom color='inherit'>log</Typography>\n                    <Switch id='log'\n                        defaultChecked={true}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                        onChange={(event, value) => {\n                            log = value\n                        }}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <Typography class=\"controlTitle\" id='caps' gutterBottom color='inherit'>caps</Typography>\n                    <Switch id='caps'\n                        defaultChecked={true}\n                        disabled={capDisable}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                        onChange={(event, value) => {\n                            caps = value\n                        }}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <Typography class=\"controlTitle\" id='opacity' gutterBottom color='inherit'>opacity</Typography>\n                    <Switch id='opacity'\n                        defaultChecked={false}\n                        disabled={opacityDisable}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                        onChange={(event, value) => {\n                            opacity = value\n                        }}\n                    />\n                </Grid>\n                <Grid item xs>\n                    <Typography class=\"controlTitle\" id='lineFill' gutterBottom color='inherit'>line fill</Typography>\n                    <Switch id='lineFill'\n                        defaultChecked={false}\n                        disabled={lineFillDisable}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                        onChange={(event, value) => {\n                            lineFill = value;\n                        }}\n                    />\n                </Grid>\n            </Grid>\n            <Typography class=\"controlTitle\" gutterBottom color='inherit'>cap color</Typography>\n            <div class='capColor'>\n                <Grid container spacing={3}>\n                    <Grid item xs>\n                        <Slider id='red'\n                            min={0}\n                            max={255}\n                            step={1}\n                            defaultValue={1}\n                            valueLabelDisplay='auto'\n                            color='secondary'\n                            onChange={(event, value) => {\n                                capColor[0] = value;\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs>\n                        <Slider id='green'\n                            min={0}\n                            max={255}\n                            step={1}\n                            defaultValue={255}\n                            valueLabelDisplay='auto'\n                            color='secondary'\n                            onChange={(event, value) => {\n                                capColor[1] = value;\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs>\n                        <Slider id='blue'\n                            min={0}\n                            max={255}\n                            step={1}\n                            defaultValue={79}\n                            valueLabelDisplay='auto'\n                            color='secondary'\n                            onChange={(event, value) => {\n                                capColor[2] = value;\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nexport { barWidth, gap, log, caps, opacity, lineFill, capColor, capSpeed, type }\n\nexport default Bars;","import React from 'react';\nimport { Slider, Typography, Grid, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core'\nimport Oscilloscope from './Oscilloscope'\nimport { thickness } from './Oscilloscope'\nimport Spectrogram from './Spectrogram'\nimport { gamma } from './Spectrogram'\nimport Bars from './Bars'\nimport { barWidth, gap, log, caps, opacity, lineFill, capColor, capSpeed, type } from './Bars'\n\nvar fade = 0;\nvar color = [1, 255, 79];\nvar select = 'left'\nvar width = 50;\nvar height = 30;\n\nconst ControlBar = () => {\n  return (\n    <div class='ControlBar'>\n      {/* <Oscilloscope /> */}\n      {/* <Spectrogram /> */}\n      <div class='controlCard'>\n        <Bars />\n      </div>\n      <div class='controlCard'>\n        <Typography class=\"controlTitle\" gutterBottom color='inherit'>fade</Typography>\n        <Slider id='fade'\n          min={0}\n          max={1}\n          step={0.01}\n          defaultValue={0}\n          valueLabelDisplay='auto'\n          color='secondary'\n          onChange={(event, value) => {\n            fade = value;\n          }}\n        />\n        <Typography class=\"controlTitle\" gutterBottom color='inherit'>color</Typography>\n        <div class='color'>\n          <Grid container spacing={3}>\n            <Grid item xs>\n              <Slider id='red'\n                min={0}\n                max={255}\n                step={1}\n                defaultValue={255}\n                valueLabelDisplay='auto'\n                color='secondary'\n                onChange={(event, value) => {\n                  color[0] = value;\n                }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Slider id='green'\n                min={0}\n                max={255}\n                step={1}\n                defaultValue={20}\n                valueLabelDisplay='auto'\n                color='secondary'\n                onChange={(event, value) => {\n                  color[1] = value;\n                }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Slider id='blue'\n                min={0}\n                max={255}\n                step={1}\n                defaultValue={147}\n                valueLabelDisplay='auto'\n                color='secondary'\n                onChange={(event, value) => {\n                  color[2] = value;\n                }}\n              />\n            </Grid>\n          </Grid>\n        </div>\n        <div class='dimensions'>\n          <Grid container spacing={2}>\n            <Grid item xs>\n              <Typography class=\"controlTitle\" id='width' gutterBottom color='inherit'>width</Typography>\n\n              <Slider id='width'\n                min={0}\n                max={100}\n                step={0.1}\n                defaultValue={50}\n                valueLabelDisplay='auto'\n                color='secondary'\n                onChange={(event, value) => {\n                  width = value;\n                }}\n              />\n            </Grid>\n            <Grid item xs>\n              <Typography class=\"controlTitle\" id='height' gutterBottom color='inherit'>height</Typography>\n              <Slider id='height'\n                min={0}\n                max={100}\n                step={0.1}\n                defaultValue={30}\n                valueLabelDisplay='auto'\n                color='secondary'\n                onChange={(event, value) => {\n                  height = value;\n                }}\n              />\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport {\n  color, width, height, thickness, fade, gamma,\n  barWidth, gap, log, caps, opacity, lineFill, capColor, capSpeed, type\n};\n\nexport default ControlBar","import React, { useEffect, useLayoutEffect, useRef } from 'react';\n// import { color } from './Info';\nimport chroma from 'chroma-js'\nimport {\n  fade, color, width, height, thickness, gamma,\n  barWidth, gap, log, caps, opacity, capColor, capSpeed, type, lineFill\n} from './ControlBar'\n\nconst AudioVisualiser = ({ audioData }) => {\n  var createCanvas = React.createRef();\n  var capYPositionArray = useRef([]);\n\n  useLayoutEffect(() => {\n    if (audioData.length > 0) {\n      draw();\n    }\n  }, [audioData])\n\n  const draw = () => {\n    const canvas = createCanvas.current;\n    const height = canvas.height;\n    const width = canvas.width;\n    const context = canvas.getContext('2d');\n    console.log(type)\n\n    var caprgb;\n    if (caps) {\n      caprgb = 'rgb('\n      caprgb = caprgb.concat(capColor[0])\n      for (var i = 1; i < 3; i++) {\n        caprgb = caprgb.concat(\", \")\n        caprgb = caprgb.concat(capColor[i])\n      }\n      caprgb = caprgb.concat(\")\")\n    }\n\n\n    var rgb = 'rgb('\n    rgb = rgb.concat(color[0])\n    for (var i = 1; i < 3; i++) {\n      rgb = rgb.concat(\", \")\n      rgb = rgb.concat(color[i])\n    }\n    rgb = rgb.concat(\")\")\n\n    context.fillStyle = 'rgba(51, 51, 51, ' + (1 - fade) + ')'\n    context.fillRect(0, 0, width, height)\n\n    // oscilloscope(height, width, context, rgb, thickness);\n    // spectro(canvas, height, width, context, rgb, gamma);\n    bars(height, width, context, rgb, barWidth, gap, log, caps, opacity, caprgb, capSpeed, type);\n  }\n\n  const oscilloscope = (height, width, context, rgb, thickness) => {\n    let x = 0;\n    const sliceWidth = (width * 1.0) / audioData.length;\n\n    context.lineWidth = thickness;\n    context.strokeStyle = rgb;\n    // var hot = chroma.scale(['#000000', 'red', '#ffffff']).gamma(1);\n    context.beginPath();\n    for (const item of audioData) {\n      // context.strokeStyle = hot(item).hex();\n      const y = (item / 255.0) * height / 4;\n      context.lineTo(x, y + height / 3);\n      x += sliceWidth;\n    }\n    context.stroke();\n  }\n\n  const bars = (height, width, context, rgb, barWidth, gap, log, caps, opacity, caprgb, capSpeed, type) => {\n    const capArray = capYPositionArray.current;\n    var barWidth = barWidth;\n    var barHeight;\n    var xx = 0;\n    var capHeight = 1;\n    var gap = gap;\n    var barNum = width / (barWidth + gap)\n    var step = Math.pow(audioData.length, 1 / (barNum));\n\n    context.beginPath();\n    for (var i = 0; i < barNum; i++) {\n      context.strokeStyle = rgb;\n      context.lineWidth = 1;\n\n      if (log) {\n        var value = audioData[Math.round(Math.pow(step, i))] * height / 255;\n      } else {\n        var value = audioData[i] * height / 255.0\n      }\n\n      // caps\n      if (caps || lineFill) {\n        context.fillStyle = caprgb;\n        if (capArray.length < barNum) {\n          capArray.push(value);\n        };\n        if (value < capArray[i]) {\n          capArray[i] = capArray[i] - capSpeed\n          if (caps) {\n            context.fillRect(i * (barWidth + gap) + gap, height - (capArray[i]), barWidth, capHeight);\n          } else {\n            context.lineTo(xx, height - (capArray[i]));\n          }\n        } else {\n          if (caps) {\n            context.fillRect(i * (barWidth + gap) + gap, height - (value) - 1, barWidth, capHeight);\n          } else {\n            context.lineTo(xx, height - value);\n          }\n          capArray[i] = value;\n        };\n      }\n\n\n      //effect\n      if (opacity) {\n        context.fillStyle = 'rgba' + rgb.substring(3, rgb.length - 1) + ',' + (value / 255.0) + ')';\n      } else {\n        context.fillStyle = rgb\n      }\n\n      //bars\n      if (type == 'doublebars') {\n        context.fillRect(i * (barWidth + gap) + gap, height / 2 - value / 2, barWidth, value / 2);\n        context.fillRect(i * (barWidth + gap) + gap, height / 2, barWidth, value / 2);\n      } else if (type == 'bars') {\n        context.fillRect(i * (barWidth + gap) + gap, height - value, barWidth, value);\n      } else if (type == 'line') {\n        context.lineTo(xx, height - value);\n        xx += barWidth + gap\n      }\n    }\n    context.stroke()\n  }\n\n  const spectro = (canvas, height, width, context, rgb, gamma) => {\n    var hot = chroma.scale(['#000000', rgb, '#ffffff']).gamma(gamma);\n    var barWidth = 1\n    var gap = 0\n    var barNum = width / (barWidth + gap)\n\n    context.drawImage(canvas, 0, 0, width, height);\n\n    for (var i = 0; i < barNum / 1; i += 1) {\n      var value = audioData[i];\n      // var value = baudioData[Math.round(Math.pow(step, i))] * height / 255 / 3;\n      context.fillStyle = hot(value / 255.0).hex();\n\n      context.fillRect(width - 1, height - i, 1, 1);\n    }\n\n    context.translate(-1, 0);\n    context.drawImage(canvas, 0, 0, width, height, 0, 0, width, height);\n\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n\n  return (\n    <canvas width={window.innerWidth * width / 100.0} height={window.innerHeight * height / 100.0} ref={createCanvas} />\n  )\n}\n\nexport default AudioVisualiser;\n","import React, { useEffect, useRef, createRef, useLayoutEffect } from \"react\";\nimport AudioVisualiser from \"./AudioVisualiser\";\n\nconst AudioAnalyser = ({ stream }) => {\n  // const [oAudioData, setOAudioData] = React.useState(new Uint8Array(0));\n  // tick = tick.bind(this);\n  // const [bAudioData, setBAudioData] = React.useState(new Uint8Array(0));\n  const [audioData, setAudioData] = React.useState(new Uint8Array(0));\n\n  var audioContext = useRef(new AudioContext());\n  var analyser = useRef();\n  // var dataArray = useRef();\n  var source = useRef();\n  var rafId = useRef();\n\n  useLayoutEffect(() => {\n    if (stream) {\n      console.log(\"init stream\");\n      analyser.current = audioContext.current.createAnalyser();\n      analyser.current.fftSize = 4096;\n      analyser.current.smoothingTimeConstant = 0.9;\n      // filter = audioContext.createBiquadFilter()\n      // filter.type = \"lowpass\"\n      // filter.frequency.value = 10000;\n      // filter.gain.value = 1;\n      // dataArray.current = new Uint8Array(analyser.current.frequencyBinCount);\n      // setOAudioData(new Uint8Array(analyser.current.fftSize));\n      // setBAudioData(new Uint8Array(analyser.current.fftSize));\n      setAudioData(new Uint8Array(analyser.current.fftSize));\n      source.current = audioContext.current.createMediaStreamSource(stream);\n      source.current.connect(analyser.current);\n      // filter.connect(audioContext.destination)\n      // rafId.current = requestAnimationFrame(tick);\n    } else {\n      console.log(\"no stream\");\n    }\n    return () => {\n      console.log(\"cancel animation\");\n      cancelAnimationFrame(rafId.current);\n      analyser.current.disconnect();\n      source.current.disconnect();\n    };\n  }, [stream]);\n\n  useLayoutEffect(() => {\n    const tick = () => {\n      var audioData = new Uint8Array(analyser.current.fftSize);\n      // analyser.current.getByteTimeDomainData(audioData);\n      analyser.current.getByteFrequencyData(audioData);\n      setAudioData(audioData)\n      // console.log('tick');\n      // var oAudioData = new Uint8Array(analyser.current.fftSize);\n      // var bAudioData = new Uint8Array(analyser.current.fftSize);\n      // analyser.current.getByteTimeDomainData(oAudioData);\n      // analyser.current.getByteFrequencyData(bAudioData);\n      // console.log(dataArray.current)\n      // setOAudioData(oAudioData);\n      // setBAudioData(bAudioData);\n      rafId.current = requestAnimationFrame(tick);\n    };\n    rafId.current = requestAnimationFrame(tick);\n  }, [])\n  return (\n    <div class=\"Vis\">\n      <AudioVisualiser audioData={audioData} />\n    </div>\n  );\n};\n\nexport default AudioAnalyser;\n","import React from 'react';\nimport { Button } from '@material-ui/core'\n\nconst Header = ({ controlAudio }) => {\n    return (\n        <div class=\"Header\">\n            <Button\n                id='butt'\n                variant='outlined'\n                color='primary'\n                onClick={controlAudio.toggleAudio}>\n                {controlAudio.audio ? 'stop' : 'begin'}\n            </Button>\n        </div>\n    );\n}\n\nexport default Header","\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri = \"http://localhost:3000/callback/\";\nconst clientId = \"6d21bc23eaeb4573a2b668d8239e57ea\";\n\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const getTokenFromUrl = () => {\n  return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      let parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n      return initial;\n    }, {});\n};\n\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\")}&response_type=token&show_dialog=true`;","import React, { useEffect } from 'react';\nimport AudioAnalyser from './AudioAnalyser';\nimport Header from './Header';\nimport ControlBar from './ControlBar'\nimport { getTokenFromUrl } from './spotify';\nimport { Typography } from '@material-ui/core'\nimport Login from './Login';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Info from './Info';\nimport './App.css';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FF01D7',\n    },\n    secondary: {\n      main: '#00EDF5',\n    },\n  },\n});\n\n// const spotify = new SpotifyWebApi({\n//   clientId: '6d21bc23eaeb4573a2b668d8239e57ea',\n//   redirectUri: 'http://localhost:3000/callback/'\n// });\n\nconst App = (props) => {\n  const [audio, setAudio] = React.useState(null);\n  // const [token, setToken] = React.useState();\n\n  const getAudio = async () => {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    setAudio(audio);\n  }\n\n  const stopAudio = () => {\n    audio.getTracks().forEach(track => track.stop());\n    setAudio(null);\n  }\n\n  const toggleAudio = () => {\n    if (audio) {\n      stopAudio();\n    } else {\n      getAudio();\n    }\n  }\n\n  // useEffect(() => {\n  //   const hash = getTokenFromUrl();\n  //   window.location.hash = \"\";\n  //   const _token = hash.access_token;\n  //   if (_token) {\n  //     setToken(_token);\n  //     spotify.setAccessToken(_token);\n  //   }\n  // }, [])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Typography class='title' variant='h1'>sandwich time</Typography>\n        {/* {token ? <a>LOGGED IN</a> : <Login />}\n      <Info spotify={spotify} /> */}\n        <Header controlAudio={{ audio, toggleAudio }} />\n        {audio ? <AudioAnalyser stream={audio} /> : ''}\n        <ControlBar />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}